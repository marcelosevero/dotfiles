# -- general -------------------------------------------------------------------

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded...\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display 'Config reloaded...'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v -c '#{pane_current_path}'
# split current window vertically
bind = split-window -h -c '#{pane_current_path}'

# pane navigation
# The -r flag indicates this key may repeat
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# sincronize panes
bind -r s setw synchronize-panes

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
bind m run "fish -c tmux-toggle-mouse"

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# -- style ---------------------------------------------------------------------

# Keep colors pretty
set -g default-terminal "screen-256color"

# Messaging
set -g message-style "fg=#000000,bg=#ffff00,bold"
set -g message-command-style "fg=#ffff00,bg=#000000,bold"
setw -g mode-style "fg=#000000,bg=#ffff00,bold"

# Pane
set -g pane-active-border-style fg='colour2'
set -g pane-border-style fg='colour8'

# Status
set -g status 'on'
set -g status-interval 1
set -g status-fg '#ffffff'
set -g status-bg '#282a36'
set -g status-position 'bottom'
set -g status-justify 'left'
set -g status-left-length 50
set -g status-right-length 100

music='#[fg=#ffffff,bg=#4e4e4e] ♪ #(fish -c "osascript ~/.dotfiles/scripts/music.applescript") '
batt='#[fg=#ffffff,bg=#4e4e4e] ♥ #(~/.dotfiles/scripts/battery.sh) '
date='#[fg=#ffffff,bg=#5f62ad] ☯  %a %d/%m '
time='#[fg=#ffffff,bg=#5f62ad] %H:%M:%S '
hostname='#[fg=#000000,bg=#af8bfc] ☰ #H '

set -g status-left "$batt"
set -g status-right "$music$date$time$hostname"

# Windows
set-option -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION DISPLAY"
set-option -g set-titles on
set-option -g set-titles-string 'do epic shit. | #S | / #W'
setw -g window-status-style fg='colour2',bg='colour0'
setw -g window-status-activity-style fg='colour2',bg='colour0'
setw -g window-status-separator ' '

flash='#{?client_prefix,#[fg=#ffffff]#[bg=#000000],#[fg=#000000]#[bg=#af8bfc]} #(fish -c "circled #I") #W '

setw -g window-status-format '#[fg=#ffffff,bg=#282a36] #(fish -c "circled #I") #W '
setw -g window-status-current-format "$flash"

# -- plugins -------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'soyuka/tmux-current-pane-hostname'

run -b '~/.tmux/plugins/tpm/tpm'
